package com.rotinom.remit;

import com.weber.remit.R;
import com.weber.remit.R.id;
import com.weber.remit.R.layout;

import android.app.Dialog;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.Toast;

import com.parse.Parse;
import com.parse.ParseACL;
import com.parse.ParseAnalytics;
import com.parse.ParseAnonymousUtils;
import com.parse.ParseException;
import com.parse.ParseObject;
import com.parse.ParseUser;
import com.parse.SignUpCallback;


/**
 * An activity representing a list of ChargeNumbers. This activity
 * has different presentations for handset and tablet-size devices. On
 * handsets, the activity presents a list of items, which when touched,
 * lead to a {@link ChargeNumberDetailActivity} representing
 * item details. On tablets, the activity presents the list of items and
 * item details side-by-side using two vertical panes.
 * <p>
 * The activity makes heavy use of fragments. The list of items is a
 * {@link ChargeNumberListFragment} and the item details
 * (if present) is a {@link ChargeNumberDetailFragment}.
 * <p>
 * This activity also implements the required
 * {@link ChargeNumberListFragment.Callbacks} interface
 * to listen for item selections.
 */
public class ChargeNumberListActivity extends FragmentActivity
        implements ChargeNumberListFragment.Callbacks {

    /**
     * Whether or not the activity is in two-pane mode, i.e. running on a tablet
     * device.
     */
    private boolean mTwoPane;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_chargenumber_list);
        
        Parse.initialize(
    		this, 
    		"KYO62SPM3uuI5lVr7dMWkIx8j9pkk0rInAMtYJnw", 
    		"HGu1gsWIEcqHajBsYRhGGQM0of387ZeMnoqwV3O7");
        
        ParseAnalytics.trackAppOpened(getIntent());
        
        // See if we need to sign up
        if (null == ParseUser.getCurrentUser()) {
        	
        	// Setup the required fields
        	ParseUser user = new ParseUser();
        	user.setUsername("rotinom");
        	user.setPassword("abc123");
        	user.setEmail("rotinom@gmail.com");
        	 
        	user.signUpInBackground(new SignUpCallback() {
        		public void done(ParseException e) {
        			if (e == null) {
        				Toast.makeText(ChargeNumberListActivity.this, "Signing up", Toast.LENGTH_SHORT).show();
        				ParseACL.setDefaultACL(new ParseACL(ParseUser.getCurrentUser()), true);
        				
        			} 
        			else {
        				Toast.makeText(ChargeNumberListActivity.this, "Signup failed", Toast.LENGTH_SHORT).show();
        			}
        		}
        	});
        }
        else {
        	Toast.makeText(ChargeNumberListActivity.this, "No need to sign up", Toast.LENGTH_SHORT).show();
        	ParseACL.setDefaultACL(new ParseACL(ParseUser.getCurrentUser()), true);
    	}
        

        if (findViewById(R.id.chargenumber_detail_container) != null) {
            // The detail container view will be present only in the
            // large-screen layouts (res/values-large and
            // res/values-sw600dp). If this view is present, then the
            // activity should be in two-pane mode.
            mTwoPane = true;

            // In two-pane mode, list items should be given the
            // 'activated' state when touched.
            ((ChargeNumberListFragment) getSupportFragmentManager()
                    .findFragmentById(R.id.chargenumber_list))
                    .setActivateOnItemClick(true);
        }

        // TODO: If exposing deep links into your app, handle intents here.
    }

    /**
     * Callback method from {@link ChargeNumberListFragment.Callbacks}
     * indicating that the item with the given ID was selected.
     */
    @Override
    public void onItemSelected(String id) {
        if (mTwoPane) {
            // In two-pane mode, show the detail view in this activity by
            // adding or replacing the detail fragment using a
            // fragment transaction.
            Bundle arguments = new Bundle();
            arguments.putString(ChargeNumberDetailFragment.ARG_ITEM_ID, id);
            ChargeNumberDetailFragment fragment = new ChargeNumberDetailFragment();
            fragment.setArguments(arguments);
            getSupportFragmentManager().beginTransaction()
                    .replace(R.id.chargenumber_detail_container, fragment)
                    .commit();

            
            
        } else {
            // In single-pane mode, simply start the detail activity
            // for the selected item ID.
            Intent detailIntent = new Intent(this, ChargeNumberDetailActivity.class);
            detailIntent.putExtra(ChargeNumberDetailFragment.ARG_ITEM_ID, id);
            startActivity(detailIntent);
        }
    }
    
    /**
     * Create the options menu
     */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.main_menu, menu);
        return true;
    }
    
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
    	switch (item.getItemId()) {
    		case R.id.add_number:
    			Toast.makeText(this, "Add CRN Selected", Toast.LENGTH_SHORT).show();
    			addCrn();
    			break;
    		case R.id.back_one_week:
    			Toast.makeText(this, "Going back one week", Toast.LENGTH_SHORT).show();
    			break;
       		case R.id.fwd_one_week:
    			Toast.makeText(this, "Going forward one week", Toast.LENGTH_SHORT).show();
    			break;
       		case R.id.menu_item_cal:
    			Toast.makeText(this, "Showing Calendar", Toast.LENGTH_SHORT).show();
    			
    			Intent intent = new Intent(this, CalendarActivity.class);
    	        startActivity(intent);
    			break;
    		default:
    			break;
    	}
    	return true;
    }
    
    protected boolean checkForDialogErrors(Dialog dialog){
    	
        final AutoCompleteTextView crn_et = 
        		(AutoCompleteTextView)dialog.findViewById(R.id.edit_crn_number);
        final EditText desc_et = 
        		(EditText)dialog.findViewById(R.id.edit_crn_desc );
        
        // Check the CRN length
		if(6 != crn_et.getText().length()){
			crn_et.setError("Charge number must be 6 digits");
			return false;
		}
		
		// Check the description
		if(0 == desc_et.getText().length()){
			desc_et.setError("Must not be empty");
			return false;
		}
		
		return true;
    }
    
    /**
     * Show the "add charge number" dialog
     */
    protected void addCrn(){
    	final Dialog dialog = new Dialog(this);
        dialog.setContentView(R.layout.dialog_add_crn);
        dialog.setTitle("Add Charge Number");
        
        // Get the CRN AutoComplete field
        final AutoCompleteTextView crn_et = 
        		(AutoCompleteTextView)dialog.findViewById(R.id.edit_crn_number);
        
        // Hook up an adapter to it
        ArrayAdapter<String> adapter = 
        		new ArrayAdapter<String>(this, R.id.edit_crn_number, CrnTextWatcher.objects_);
        
        crn_et.setAdapter(adapter);
        
        // Add a text changed listener
        crn_et.addTextChangedListener(new CrnTextWatcher());
        
        final EditText desc_et = 
        		(EditText)dialog.findViewById(R.id.edit_crn_desc);
        

        
        // Set up add button click handlers
        Button add_button = (Button)dialog.findViewById(R.id.add_crn_button);
        add_button.setOnClickListener(new View.OnClickListener() 
        {
			@Override
			public void onClick(View v) {
				Toast.makeText(ChargeNumberListActivity.this, "Adding CRN to list", Toast.LENGTH_SHORT).show();
			}
            // Perform button logic
        });
        
        
        Button create_button = (Button)dialog.findViewById(R.id.create_crn_button);
        create_button.setOnClickListener(new View.OnClickListener() 
        {
			@Override
			public void onClick(View v) {
				Toast.makeText(ChargeNumberListActivity.this, "Creating new CRN and adding to list", Toast.LENGTH_SHORT).show();
				
				if(!checkForDialogErrors(dialog)){
					return;
				}
				

				
				ParseObject po = new ParseObject("CRN");
				po.put("crn", crn_et.getText().toString());
				po.put("description", desc_et.getText().toString());
				po.put("archived", false);
				po.put("favorite", true);
				
				try {
					po.save();
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				dialog.cancel();
			}
            // Perform button logic
        });
        
        
        dialog.show();
    }
}
